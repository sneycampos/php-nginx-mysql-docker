version: '3.7'

# Services
services:

  # Nginx Service
  nginx:
    build: ./nginx
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./../:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - php

  # PHP Service
  php:
    build:
      context: ./php
      dockerfile: Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
        - INSTALL_POSTGIS=${INSTALL_POSTGIS}
        - INSTALL_XDEBUG=${INSTALL_XDEBUG}
        - INSTALL_NODEJS=${INSTALL_NODEJS}
    environment:
      PHP_IDE_CONFIG: ${XDEBUG_SERVER_NAME}
    working_dir: /var/www/
    restart: unless-stopped
    volumes:
      - ./../:/var/www/
      - ./php/custom.ini:/usr/local/etc/php/conf.d/custom.ini:rw,delegated
      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Database Services

  #mysql
  mariadb:
    image: yobasystems/alpine-mariadb
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysqldata:/var/lib/mysql
    ports:
      - "3306:3306"

  # postgres with postgis + gdal
  postgres:
    build: ./postgres
    volumes:
      - postgresdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # Redis Service
  redis:
    image: redis:6-alpine
    command: [ "redis-server", "--appendonly", "yes", "--requirepass", "toGwNuPX7HVe6fwI+W3y5znnupaQYBn3MwBZjO1q7Sg=" ]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  php-worker:
    build:
      context: ./php-worker
      dockerfile: Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    volumes:
      - ./../:/var/www/
      - ./php-worker/conf/supervisord.conf:/etc/supervisor/supervisord.conf
      - ./php-worker/conf/supervisor-programs.conf:/etc/supervisor/conf.d/app.conf
    command: [ "supervisord", "-c", "/etc/supervisor/supervisord.conf" ]

# Volumes
volumes:

  mysqldata:
    driver: local
  postgresdata:
    driver: local
  redisdata:
    driver: local